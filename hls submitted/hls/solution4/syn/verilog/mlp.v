// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mlp,hls_ip_2016_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.520000,HLS_SYN_LAT=1984,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=56,HLS_SYN_FF=3694,HLS_SYN_LUT=2046}" *)

module mlp (
        ap_clk,
        ap_rst_n,
        input_r_TDATA,
        input_r_TVALID,
        input_r_TREADY,
        output_r_TDATA,
        output_r_TVALID,
        output_r_TREADY
);

parameter    ap_ST_fsm_state1 = 46'b1;
parameter    ap_ST_fsm_pp0_stage0 = 46'b10;
parameter    ap_ST_fsm_pp0_stage1 = 46'b100;
parameter    ap_ST_fsm_pp0_stage2 = 46'b1000;
parameter    ap_ST_fsm_pp0_stage3 = 46'b10000;
parameter    ap_ST_fsm_pp0_stage4 = 46'b100000;
parameter    ap_ST_fsm_pp0_stage5 = 46'b1000000;
parameter    ap_ST_fsm_pp0_stage6 = 46'b10000000;
parameter    ap_ST_fsm_pp0_stage7 = 46'b100000000;
parameter    ap_ST_fsm_pp0_stage8 = 46'b1000000000;
parameter    ap_ST_fsm_pp0_stage9 = 46'b10000000000;
parameter    ap_ST_fsm_pp0_stage10 = 46'b100000000000;
parameter    ap_ST_fsm_pp0_stage11 = 46'b1000000000000;
parameter    ap_ST_fsm_pp0_stage12 = 46'b10000000000000;
parameter    ap_ST_fsm_state16 = 46'b100000000000000;
parameter    ap_ST_fsm_pp1_stage0 = 46'b1000000000000000;
parameter    ap_ST_fsm_state19 = 46'b10000000000000000;
parameter    ap_ST_fsm_pp2_stage0 = 46'b100000000000000000;
parameter    ap_ST_fsm_pp2_stage1 = 46'b1000000000000000000;
parameter    ap_ST_fsm_pp2_stage2 = 46'b10000000000000000000;
parameter    ap_ST_fsm_pp2_stage3 = 46'b100000000000000000000;
parameter    ap_ST_fsm_pp2_stage4 = 46'b1000000000000000000000;
parameter    ap_ST_fsm_pp2_stage5 = 46'b10000000000000000000000;
parameter    ap_ST_fsm_pp2_stage6 = 46'b100000000000000000000000;
parameter    ap_ST_fsm_pp2_stage7 = 46'b1000000000000000000000000;
parameter    ap_ST_fsm_pp2_stage8 = 46'b10000000000000000000000000;
parameter    ap_ST_fsm_pp2_stage9 = 46'b100000000000000000000000000;
parameter    ap_ST_fsm_pp2_stage10 = 46'b1000000000000000000000000000;
parameter    ap_ST_fsm_pp2_stage11 = 46'b10000000000000000000000000000;
parameter    ap_ST_fsm_pp2_stage12 = 46'b100000000000000000000000000000;
parameter    ap_ST_fsm_state34 = 46'b1000000000000000000000000000000;
parameter    ap_ST_fsm_state35 = 46'b10000000000000000000000000000000;
parameter    ap_ST_fsm_pp3_stage0 = 46'b100000000000000000000000000000000;
parameter    ap_ST_fsm_state38 = 46'b1000000000000000000000000000000000;
parameter    ap_ST_fsm_state39 = 46'b10000000000000000000000000000000000;
parameter    ap_ST_fsm_state40 = 46'b100000000000000000000000000000000000;
parameter    ap_ST_fsm_state41 = 46'b1000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp4_stage0 = 46'b10000000000000000000000000000000000000;
parameter    ap_ST_fsm_state52 = 46'b100000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage0 = 46'b1000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp5_stage1 = 46'b10000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state61 = 46'b100000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state62 = 46'b1000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state63 = 46'b10000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_pp6_stage0 = 46'b100000000000000000000000000000000000000000000;
parameter    ap_ST_fsm_state67 = 46'b1000000000000000000000000000000000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv5_1D = 5'b11101;
parameter    ap_const_lv4_B = 4'b1011;
parameter    ap_const_lv24_500 = 24'b10100000000;
parameter    ap_const_lv24_260 = 24'b1001100000;
parameter    ap_const_lv24_100 = 24'b100000000;
parameter    ap_const_lv24_FFFF00 = 24'b111111111111111100000000;
parameter    ap_const_lv25_0 = 25'b0000000000000000000000000;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv24_FFFDA0 = 24'b111111111111110110100000;
parameter    ap_const_lv30_60 = 30'b1100000;
parameter    ap_const_lv24_FFFB00 = 24'b111111111111101100000000;
parameter    ap_const_lv28_28 = 28'b101000;
parameter    ap_const_lv28_100 = 28'b100000000;
parameter    ap_const_lv28_D8 = 28'b11011000;
parameter    ap_const_lv30_A0 = 30'b10100000;
parameter    ap_const_lv30_0 = 30'b000000000000000000000000000000;

input   ap_clk;
input   ap_rst_n;
input  [31:0] input_r_TDATA;
input   input_r_TVALID;
output   input_r_TREADY;
output  [31:0] output_r_TDATA;
output   output_r_TVALID;
input   output_r_TREADY;

reg    ap_rst_n_inv;
reg   [31:0] input_r_0_data_out;
wire    input_r_0_vld_in;
wire    input_r_0_vld_out;
wire    input_r_0_ack_in;
reg    input_r_0_ack_out;
reg   [31:0] input_r_0_payload_A;
reg   [31:0] input_r_0_payload_B;
reg    input_r_0_sel_rd;
reg    input_r_0_sel_wr;
wire    input_r_0_sel;
wire    input_r_0_load_A;
wire    input_r_0_load_B;
reg   [1:0] input_r_0_state;
wire    input_r_0_state_cmp_full;
reg   [31:0] output_r_1_data_out;
reg    output_r_1_vld_in;
wire    output_r_1_vld_out;
wire    output_r_1_ack_in;
wire    output_r_1_ack_out;
reg   [31:0] output_r_1_payload_A;
reg   [31:0] output_r_1_payload_B;
reg    output_r_1_sel_rd;
reg    output_r_1_sel_wr;
wire    output_r_1_sel;
wire    output_r_1_load_A;
wire    output_r_1_load_B;
reg   [1:0] output_r_1_state;
wire    output_r_1_state_cmp_full;
reg    input_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
reg   [0:0] exitcond9_reg_2009;
wire   [0:0] ap_CS_fsm_pp0_stage2;
wire   [0:0] ap_CS_fsm_pp0_stage3;
wire   [0:0] ap_CS_fsm_pp0_stage4;
wire   [0:0] ap_CS_fsm_pp0_stage5;
wire   [0:0] ap_CS_fsm_pp0_stage6;
wire   [0:0] ap_CS_fsm_pp0_stage7;
wire   [0:0] ap_CS_fsm_pp0_stage8;
wire   [0:0] ap_CS_fsm_pp0_stage9;
wire   [0:0] ap_CS_fsm_pp0_stage10;
wire   [0:0] ap_CS_fsm_pp0_stage11;
wire   [0:0] ap_CS_fsm_pp0_stage12;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire   [0:0] ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] exitcond8_reg_2034;
wire   [0:0] ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] exitcond7_reg_2043;
wire   [0:0] ap_CS_fsm_pp2_stage2;
wire   [0:0] ap_CS_fsm_pp2_stage3;
wire   [0:0] ap_CS_fsm_pp2_stage4;
wire   [0:0] ap_CS_fsm_pp2_stage5;
wire   [0:0] ap_CS_fsm_pp2_stage6;
wire   [0:0] ap_CS_fsm_pp2_stage7;
wire   [0:0] ap_CS_fsm_pp2_stage8;
wire   [0:0] ap_CS_fsm_pp2_stage9;
wire   [0:0] ap_CS_fsm_pp2_stage10;
wire   [0:0] ap_CS_fsm_pp2_stage11;
wire   [0:0] ap_CS_fsm_pp2_stage12;
wire   [0:0] ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire   [0:0] ap_CS_fsm_state35;
wire   [0:0] ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] exitcond5_reg_2073;
reg    output_r_TDATA_blk_n;
wire   [0:0] ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
reg   [0:0] exitcond_reg_2584;
reg    ap_enable_reg_pp6_iter2;
reg   [0:0] ap_pipeline_reg_pp6_iter1_exitcond_reg_2584;
reg   [4:0] i_reg_821;
reg   [3:0] j_reg_833;
reg   [3:0] j_1_reg_845;
reg   [3:0] i_2_reg_857;
reg   [3:0] i_3_reg_881;
reg   [3:0] j_3_reg_892;
reg   [4:0] i_4_reg_903;
reg   [31:0] reg_914;
reg   [31:0] reg_920;
reg   [31:0] reg_926;
reg   [31:0] reg_932;
reg   [31:0] reg_938;
reg   [31:0] reg_944;
reg   [31:0] reg_950;
reg   [31:0] reg_956;
reg   [31:0] reg_962;
reg   [31:0] reg_968;
reg   [31:0] reg_974;
wire   [31:0] result_q0;
reg   [31:0] reg_980;
wire   [0:0] ap_CS_fsm_state62;
wire   [0:0] exitcond9_fu_985_p2;
wire   [31:0] i_cast_fu_991_p1;
reg   [31:0] i_cast_reg_2013;
wire   [4:0] i_1_fu_996_p2;
reg   [4:0] i_1_reg_2029;
wire   [0:0] exitcond8_fu_1002_p2;
wire   [3:0] j_2_fu_1008_p2;
reg   [3:0] j_2_reg_2038;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond7_fu_1026_p2;
wire   [31:0] j_1_cast_fu_1032_p1;
reg   [31:0] j_1_cast_reg_2047;
wire   [3:0] j_4_fu_1037_p2;
reg   [3:0] j_4_reg_2063;
wire   [3:0] weightHO_addr_reg_2068;
wire   [0:0] exitcond5_fu_1050_p2;
wire   [3:0] i_5_fu_1056_p2;
reg   [3:0] i_5_reg_2077;
reg    ap_enable_reg_pp3_iter0;
wire  signed [31:0] weightHO_q0;
reg   [31:0] weightHO_load_reg_2082;
wire   [0:0] ap_CS_fsm_state39;
wire   [0:0] exitcond4_fu_1067_p2;
wire   [0:0] ap_CS_fsm_state40;
wire   [31:0] k_5_cast_fu_1073_p1;
reg   [31:0] k_5_cast_reg_2091;
wire   [31:0] test_data_1_q0;
reg  signed [31:0] test_data_1_load_reg_2161;
wire   [0:0] ap_CS_fsm_state41;
wire   [31:0] test_data_2_q0;
reg  signed [31:0] test_data_2_load_reg_2166;
wire   [31:0] test_data_3_q0;
reg  signed [31:0] test_data_3_load_reg_2171;
wire   [31:0] test_data_4_q0;
reg  signed [31:0] test_data_4_load_reg_2176;
wire   [31:0] test_data_5_q0;
reg  signed [31:0] test_data_5_load_reg_2181;
wire   [31:0] test_data_6_q0;
reg  signed [31:0] test_data_6_load_reg_2186;
wire   [31:0] test_data_7_q0;
reg  signed [31:0] test_data_7_load_reg_2191;
wire   [31:0] test_data_8_q0;
reg  signed [31:0] test_data_8_load_reg_2196;
wire   [31:0] test_data_9_q0;
reg  signed [31:0] test_data_9_load_reg_2201;
wire   [31:0] test_data_10_q0;
reg  signed [31:0] test_data_10_load_reg_2206;
wire   [31:0] test_data_11_q0;
reg  signed [31:0] test_data_11_load_reg_2211;
wire   [31:0] test_data_12_q0;
reg  signed [31:0] test_data_12_load_reg_2216;
wire   [31:0] test_data_13_q0;
reg  signed [31:0] test_data_13_load_reg_2221;
wire   [0:0] exitcond3_fu_1090_p2;
reg   [0:0] exitcond3_reg_2226;
wire   [0:0] ap_CS_fsm_pp4_stage0;
reg   [0:0] ap_pipeline_reg_pp4_iter1_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter2_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter3_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter4_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter5_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter6_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter7_exitcond3_reg_2226;
reg   [0:0] ap_pipeline_reg_pp4_iter8_exitcond3_reg_2226;
wire   [31:0] i_3_cast_fu_1096_p1;
reg   [31:0] i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter1_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter2_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter3_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter4_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter5_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter6_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter7_i_3_cast_reg_2230;
reg   [31:0] ap_pipeline_reg_pp4_iter8_i_3_cast_reg_2230;
wire   [3:0] i_7_fu_1113_p2;
reg    ap_enable_reg_pp4_iter0;
wire  signed [31:0] weightIH_1_q0;
reg    ap_enable_reg_pp4_iter1;
wire  signed [31:0] weightIH_2_q0;
wire  signed [31:0] weightIH_3_q0;
wire  signed [31:0] weightIH_4_q0;
wire  signed [31:0] weightIH_5_q0;
wire  signed [31:0] weightIH_6_q0;
wire  signed [31:0] weightIH_7_q0;
wire  signed [31:0] weightIH_8_q0;
wire  signed [31:0] weightIH_9_q0;
wire  signed [31:0] weightIH_10_q0;
wire  signed [31:0] weightIH_11_q0;
wire  signed [31:0] weightIH_12_q0;
wire  signed [31:0] weightIH_13_q0;
wire   [31:0] grp_fu_1119_p2;
reg   [31:0] tmp_8_reg_2376;
wire   [31:0] grp_fu_1124_p2;
reg   [31:0] tmp_36_1_reg_2381;
wire   [31:0] grp_fu_1129_p2;
reg   [31:0] tmp_36_2_reg_2386;
wire   [31:0] grp_fu_1134_p2;
reg   [31:0] tmp_36_3_reg_2391;
wire   [31:0] grp_fu_1149_p2;
reg   [31:0] tmp_36_6_reg_2396;
wire   [31:0] grp_fu_1164_p2;
reg   [31:0] tmp_36_9_reg_2401;
wire   [31:0] grp_fu_1169_p2;
reg   [31:0] tmp_36_s_reg_2406;
wire   [31:0] tmp4_fu_1184_p2;
reg   [31:0] tmp4_reg_2411;
wire   [31:0] tmp7_fu_1190_p2;
reg   [31:0] tmp7_reg_2416;
wire   [31:0] tmp10_fu_1196_p2;
reg   [31:0] tmp10_reg_2421;
wire   [31:0] tmp_37_s_fu_1246_p2;
reg   [31:0] tmp_37_s_reg_2426;
reg   [23:0] tmp_9_reg_2432;
reg   [18:0] tmp_10_reg_2443;
reg   [18:0] ap_pipeline_reg_pp4_iter8_tmp_10_reg_2443;
reg   [20:0] tmp_12_reg_2448;
reg   [20:0] ap_pipeline_reg_pp4_iter8_tmp_12_reg_2448;
wire   [0:0] tmp_i_fu_1285_p2;
reg   [0:0] tmp_i_reg_2453;
wire   [0:0] tmp_1_i_fu_1290_p2;
reg   [0:0] tmp_1_i_reg_2458;
wire   [0:0] tmp_4_i_fu_1295_p2;
reg   [0:0] tmp_4_i_reg_2464;
wire   [31:0] newSel3_fu_1507_p3;
reg   [31:0] newSel3_reg_2469;
wire   [0:0] or_cond3_fu_1515_p2;
reg   [0:0] or_cond3_reg_2474;
reg   [4:0] result_addr_1_reg_2479;
wire   [0:0] ap_CS_fsm_state52;
wire   [0:0] exitcond1_fu_1604_p2;
reg   [0:0] exitcond1_reg_2484;
wire   [0:0] ap_CS_fsm_pp5_stage0;
reg   [0:0] ap_pipeline_reg_pp5_iter1_exitcond1_reg_2484;
reg   [0:0] ap_pipeline_reg_pp5_iter2_exitcond1_reg_2484;
reg   [0:0] ap_pipeline_reg_pp5_iter3_exitcond1_reg_2484;
wire   [3:0] j_5_fu_1616_p2;
reg   [3:0] j_5_reg_2498;
reg    ap_enable_reg_pp5_iter0;
wire  signed [31:0] SumH_q0;
wire   [0:0] ap_CS_fsm_pp5_stage1;
wire   [31:0] grp_fu_1622_p2;
reg   [31:0] tmp_32_reg_2513;
wire   [4:0] k_fu_1634_p2;
reg   [4:0] k_reg_2518;
wire   [0:0] ap_CS_fsm_state61;
wire   [0:0] tmp_i1_fu_1654_p2;
reg   [0:0] tmp_i1_reg_2523;
wire   [0:0] tmp_1_i2_fu_1660_p2;
reg   [0:0] tmp_1_i2_reg_2530;
reg   [18:0] tmp_24_reg_2536;
wire   [0:0] tmp_4_i5_fu_1676_p2;
reg   [0:0] tmp_4_i5_reg_2541;
reg   [20:0] tmp_26_reg_2547;
wire   [0:0] tmp_7_i8_fu_1692_p2;
reg   [0:0] tmp_7_i8_reg_2552;
wire   [30:0] p_neg_t_i1_fu_1722_p2;
reg   [30:0] p_neg_t_i1_reg_2558;
wire   [0:0] tmp_i1_20_fu_1728_p2;
reg   [0:0] tmp_i1_20_reg_2563;
reg   [21:0] tmp_35_reg_2569;
wire   [0:0] tmp_12_i1_fu_1744_p2;
reg   [0:0] tmp_12_i1_reg_2574;
reg   [19:0] tmp_37_reg_2579;
wire   [0:0] exitcond_fu_1992_p2;
wire   [4:0] i_6_fu_2003_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [0:0] ap_CS_fsm_state1;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state19;
reg    ap_enable_reg_pp4_iter2;
reg    ap_enable_reg_pp4_iter3;
reg    ap_enable_reg_pp4_iter4;
reg    ap_enable_reg_pp4_iter5;
reg    ap_enable_reg_pp4_iter6;
reg    ap_enable_reg_pp4_iter7;
reg    ap_enable_reg_pp4_iter8;
reg    ap_enable_reg_pp4_iter9;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
reg    ap_enable_reg_pp5_iter3;
reg   [4:0] test_data_1_address0;
reg    test_data_1_ce0;
reg    test_data_1_we0;
reg   [4:0] test_data_2_address0;
reg    test_data_2_ce0;
reg    test_data_2_we0;
reg   [4:0] test_data_3_address0;
reg    test_data_3_ce0;
reg    test_data_3_we0;
reg   [4:0] test_data_4_address0;
reg    test_data_4_ce0;
reg    test_data_4_we0;
reg   [4:0] test_data_5_address0;
reg    test_data_5_ce0;
reg    test_data_5_we0;
reg   [4:0] test_data_6_address0;
reg    test_data_6_ce0;
reg    test_data_6_we0;
reg   [4:0] test_data_7_address0;
reg    test_data_7_ce0;
reg    test_data_7_we0;
reg   [4:0] test_data_8_address0;
reg    test_data_8_ce0;
reg    test_data_8_we0;
reg   [4:0] test_data_9_address0;
reg    test_data_9_ce0;
reg    test_data_9_we0;
reg   [4:0] test_data_10_address0;
reg    test_data_10_ce0;
reg    test_data_10_we0;
reg   [4:0] test_data_11_address0;
reg    test_data_11_ce0;
reg    test_data_11_we0;
reg   [4:0] test_data_12_address0;
reg    test_data_12_ce0;
reg    test_data_12_we0;
reg   [4:0] test_data_13_address0;
reg    test_data_13_ce0;
reg    test_data_13_we0;
reg   [3:0] weightIH_0_address0;
reg    weightIH_0_ce0;
reg    weightIH_0_we0;
wire   [31:0] weightIH_0_d0;
wire   [31:0] weightIH_0_q0;
reg   [3:0] weightIH_1_address0;
reg    weightIH_1_ce0;
reg    weightIH_1_we0;
reg   [3:0] weightIH_2_address0;
reg    weightIH_2_ce0;
reg    weightIH_2_we0;
reg   [3:0] weightIH_3_address0;
reg    weightIH_3_ce0;
reg    weightIH_3_we0;
reg   [3:0] weightIH_4_address0;
reg    weightIH_4_ce0;
reg    weightIH_4_we0;
reg   [3:0] weightIH_5_address0;
reg    weightIH_5_ce0;
reg    weightIH_5_we0;
reg   [3:0] weightIH_6_address0;
reg    weightIH_6_ce0;
reg    weightIH_6_we0;
reg   [3:0] weightIH_7_address0;
reg    weightIH_7_ce0;
reg    weightIH_7_we0;
reg   [3:0] weightIH_8_address0;
reg    weightIH_8_ce0;
reg    weightIH_8_we0;
reg   [3:0] weightIH_9_address0;
reg    weightIH_9_ce0;
reg    weightIH_9_we0;
reg   [3:0] weightIH_10_address0;
reg    weightIH_10_ce0;
reg    weightIH_10_we0;
reg   [3:0] weightIH_11_address0;
reg    weightIH_11_ce0;
reg    weightIH_11_we0;
reg   [3:0] weightIH_12_address0;
reg    weightIH_12_ce0;
reg    weightIH_12_we0;
reg   [3:0] weightIH_13_address0;
reg    weightIH_13_ce0;
reg    weightIH_13_we0;
reg   [3:0] weightHO_address0;
reg    weightHO_ce0;
reg    weightHO_we0;
reg   [31:0] weightHO_d0;
reg   [3:0] SumH_address0;
reg    SumH_ce0;
reg    SumH_we0;
wire   [31:0] SumH_d0;
reg   [4:0] result_address0;
reg    result_ce0;
reg    result_we0;
reg   [31:0] result_d0;
reg   [4:0] i_phi_fu_825_p4;
reg   [3:0] j_phi_fu_837_p4;
reg   [3:0] j_1_phi_fu_849_p4;
reg   [3:0] i_2_phi_fu_861_p4;
reg   [4:0] k_5_reg_869;
wire   [0:0] ap_CS_fsm_state63;
reg   [3:0] j_3_phi_fu_896_p4;
wire   [31:0] j_cast_fu_1014_p1;
wire   [31:0] i_2_cast_fu_1062_p1;
wire   [31:0] j_3_cast_fu_1610_p1;
wire   [31:0] i_4_cast_fu_1998_p1;
wire   [31:0] tmp_2_fu_1043_p2;
wire   [0:0] ap_CS_fsm_state38;
wire   [31:0] tmp_33_fu_1628_p2;
wire   [31:0] newSel11_fu_1983_p3;
wire   [31:0] grp_fu_1139_p2;
wire   [31:0] grp_fu_1144_p2;
wire   [31:0] grp_fu_1154_p2;
wire   [31:0] grp_fu_1159_p2;
wire   [31:0] grp_fu_1174_p2;
wire   [31:0] grp_fu_1179_p2;
wire   [31:0] tmp1_fu_1202_p2;
wire   [31:0] tmp3_fu_1212_p2;
wire   [31:0] tmp5_fu_1216_p2;
wire   [31:0] tmp2_fu_1206_p2;
wire   [31:0] tmp9_fu_1231_p2;
wire   [31:0] tmp11_fu_1235_p2;
wire   [31:0] tmp8_fu_1227_p2;
wire   [31:0] tmp12_fu_1240_p2;
wire   [31:0] tmp6_fu_1221_p2;
wire  signed [24:0] tmp_34_cast_fu_1282_p1;
wire   [24:0] p_neg_i_fu_1312_p2;
wire   [22:0] tmp_15_fu_1318_p4;
wire  signed [29:0] tmp_16_fu_1328_p1;
wire   [30:0] p_lshr_i_cast_fu_1332_p1;
wire   [21:0] tmp_17_fu_1342_p4;
wire  signed [29:0] tmp_18_fu_1351_p1;
wire   [0:0] tmp_14_fu_1305_p3;
wire   [30:0] p_neg_t_i_fu_1336_p2;
wire   [30:0] p_lshr_f_i_cast_fu_1355_p1;
wire   [30:0] tmp_8_i_fu_1359_p3;
wire  signed [31:0] tmp_8_i_cast_fu_1367_p1;
wire   [21:0] tmp_19_fu_1382_p4;
wire  signed [28:0] tmp_20_fu_1392_p1;
wire   [29:0] tmp_13_i_cast_fu_1396_p1;
wire   [29:0] tmp_11_i_fu_1400_p2;
wire   [19:0] tmp_21_fu_1415_p4;
wire  signed [26:0] tmp_22_fu_1425_p1;
wire   [27:0] tmp_16_i_cast_fu_1429_p1;
wire   [0:0] tmp_7_i_fu_1300_p2;
wire   [0:0] sel_tmp12_i_fu_1439_p2;
wire   [0:0] tmp_i_16_fu_1377_p2;
wire   [0:0] sel_tmp21_i_fu_1451_p2;
wire   [0:0] tmp_12_i_fu_1410_p2;
wire   [0:0] sel_tmp32_i_fu_1463_p2;
wire   [27:0] tmp_14_i_fu_1433_p2;
wire   [27:0] newSel_fu_1475_p3;
wire   [0:0] sel_tmp33_i_fu_1469_p2;
wire   [0:0] sel_tmp22_i_fu_1457_p2;
wire  signed [31:0] tmp_11_i_cast_fu_1406_p1;
wire   [31:0] tmp_9_i_fu_1371_p2;
wire   [0:0] sel_tmp13_i_fu_1445_p2;
wire   [0:0] or_cond_fu_1487_p2;
wire  signed [31:0] newSel_cast_fu_1483_p1;
wire   [31:0] newSel1_fu_1493_p3;
wire   [0:0] or_cond1_fu_1501_p2;
wire  signed [26:0] tmp_11_fu_1521_p1;
wire   [27:0] tmp_2_i_cast_fu_1524_p1;
wire   [27:0] tmp_3_i_fu_1528_p2;
wire  signed [28:0] tmp_13_fu_1538_p1;
wire   [29:0] tmp_5_i_cast_fu_1541_p1;
wire   [0:0] sel_tmp_i_fu_1551_p2;
wire   [0:0] sel_tmp5_i_fu_1561_p2;
wire   [0:0] sel_tmp6_i_fu_1566_p2;
wire   [29:0] tmp_6_i_fu_1545_p2;
wire   [29:0] tmp_3_i_cast_fu_1534_p1;
wire   [0:0] sel_tmp1_i_fu_1556_p2;
wire   [0:0] or_cond2_fu_1579_p2;
wire   [29:0] newSel2_fu_1571_p3;
wire   [29:0] newSel4_fu_1585_p3;
wire   [31:0] newSel57_cast_fu_1593_p1;
wire   [23:0] tmp_23_fu_1640_p4;
wire  signed [24:0] tmp_30_cast_fu_1650_p1;
wire   [24:0] p_neg_i1_fu_1698_p2;
wire   [22:0] tmp_29_fu_1704_p4;
wire  signed [29:0] tmp_30_fu_1714_p1;
wire   [30:0] p_lshr_i12_cast_fu_1718_p1;
wire  signed [26:0] tmp_25_fu_1760_p1;
wire   [27:0] tmp_2_i3_cast_fu_1763_p1;
wire   [27:0] tmp_3_i4_fu_1767_p2;
wire  signed [28:0] tmp_27_fu_1777_p1;
wire   [29:0] tmp_5_i6_cast_fu_1780_p1;
wire   [21:0] tmp_31_fu_1798_p4;
wire  signed [29:0] tmp_34_fu_1808_p1;
wire   [0:0] tmp_28_fu_1790_p3;
wire   [30:0] p_lshr_f_i14_cast_fu_1812_p1;
wire   [30:0] tmp_8_i1_fu_1816_p3;
wire  signed [31:0] tmp_8_i15_cast_fu_1823_p1;
wire  signed [28:0] tmp_36_fu_1833_p1;
wire   [29:0] tmp_13_i18_cast_fu_1836_p1;
wire   [29:0] tmp_11_i1_fu_1840_p2;
wire  signed [26:0] tmp_38_fu_1850_p1;
wire   [27:0] tmp_16_i21_cast_fu_1853_p1;
wire   [0:0] sel_tmp_i1_fu_1863_p2;
wire   [0:0] sel_tmp5_i1_fu_1873_p2;
wire   [0:0] sel_tmp12_i1_fu_1883_p2;
wire   [0:0] sel_tmp21_i1_fu_1893_p2;
wire   [0:0] sel_tmp32_i1_fu_1903_p2;
wire   [27:0] tmp_14_i1_fu_1857_p2;
wire   [27:0] newSel6_fu_1913_p3;
wire   [0:0] sel_tmp33_i1_fu_1908_p2;
wire   [0:0] sel_tmp22_i1_fu_1898_p2;
wire  signed [31:0] tmp_11_i19_cast_fu_1846_p1;
wire   [31:0] tmp_9_i1_fu_1827_p2;
wire   [0:0] sel_tmp13_i1_fu_1888_p2;
wire   [0:0] sel_tmp6_i1_fu_1878_p2;
wire   [29:0] tmp_6_i7_fu_1784_p2;
wire   [29:0] tmp_3_i4_cast_fu_1773_p1;
wire   [0:0] sel_tmp1_i1_fu_1868_p2;
wire   [0:0] or_cond4_fu_1924_p2;
wire  signed [31:0] newSel61_cast_fu_1920_p1;
wire   [31:0] newSel7_fu_1929_p3;
wire   [0:0] or_cond5_fu_1937_p2;
wire   [0:0] or_cond6_fu_1951_p2;
wire   [29:0] newSel8_fu_1943_p3;
wire   [29:0] newSel10_fu_1971_p3;
wire   [0:0] or_cond7_fu_1965_p2;
wire   [31:0] newSel9_fu_1957_p3;
wire   [31:0] newSel69_cast_fu_1979_p1;
reg   [45:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 input_r_0_sel_rd = 1'b0;
#0 input_r_0_sel_wr = 1'b0;
#0 input_r_0_state = 2'b00;
#0 output_r_1_sel_rd = 1'b0;
#0 output_r_1_sel_wr = 1'b0;
#0 output_r_1_state = 2'b00;
#0 ap_CS_fsm = 46'b1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter3 = 1'b0;
#0 ap_enable_reg_pp4_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter5 = 1'b0;
#0 ap_enable_reg_pp4_iter6 = 1'b0;
#0 ap_enable_reg_pp4_iter7 = 1'b0;
#0 ap_enable_reg_pp4_iter8 = 1'b0;
#0 ap_enable_reg_pp4_iter9 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter3 = 1'b0;
end

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_1_address0),
    .ce0(test_data_1_ce0),
    .we0(test_data_1_we0),
    .d0(reg_914),
    .q0(test_data_1_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_2_address0),
    .ce0(test_data_2_ce0),
    .we0(test_data_2_we0),
    .d0(reg_920),
    .q0(test_data_2_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_3_address0),
    .ce0(test_data_3_ce0),
    .we0(test_data_3_we0),
    .d0(reg_926),
    .q0(test_data_3_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_4_address0),
    .ce0(test_data_4_ce0),
    .we0(test_data_4_we0),
    .d0(reg_932),
    .q0(test_data_4_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_5_address0),
    .ce0(test_data_5_ce0),
    .we0(test_data_5_we0),
    .d0(reg_938),
    .q0(test_data_5_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_6_address0),
    .ce0(test_data_6_ce0),
    .we0(test_data_6_we0),
    .d0(reg_944),
    .q0(test_data_6_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_7_address0),
    .ce0(test_data_7_ce0),
    .we0(test_data_7_we0),
    .d0(reg_950),
    .q0(test_data_7_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_8_address0),
    .ce0(test_data_8_ce0),
    .we0(test_data_8_we0),
    .d0(reg_956),
    .q0(test_data_8_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_9_address0),
    .ce0(test_data_9_ce0),
    .we0(test_data_9_we0),
    .d0(reg_962),
    .q0(test_data_9_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_10_address0),
    .ce0(test_data_10_ce0),
    .we0(test_data_10_we0),
    .d0(reg_968),
    .q0(test_data_10_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_11_address0),
    .ce0(test_data_11_ce0),
    .we0(test_data_11_we0),
    .d0(reg_974),
    .q0(test_data_11_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_12_address0),
    .ce0(test_data_12_ce0),
    .we0(test_data_12_we0),
    .d0(input_r_0_data_out),
    .q0(test_data_12_q0)
);

mlp_test_data_1 #(
    .DataWidth( 32 ),
    .AddressRange( 29 ),
    .AddressWidth( 5 ))
test_data_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(test_data_13_address0),
    .ce0(test_data_13_ce0),
    .we0(test_data_13_we0),
    .d0(input_r_0_data_out),
    .q0(test_data_13_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_0_address0),
    .ce0(weightIH_0_ce0),
    .we0(weightIH_0_we0),
    .d0(weightIH_0_d0),
    .q0(weightIH_0_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_1_address0),
    .ce0(weightIH_1_ce0),
    .we0(weightIH_1_we0),
    .d0(reg_914),
    .q0(weightIH_1_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_2_address0),
    .ce0(weightIH_2_ce0),
    .we0(weightIH_2_we0),
    .d0(reg_920),
    .q0(weightIH_2_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_3_address0),
    .ce0(weightIH_3_ce0),
    .we0(weightIH_3_we0),
    .d0(reg_926),
    .q0(weightIH_3_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_4_address0),
    .ce0(weightIH_4_ce0),
    .we0(weightIH_4_we0),
    .d0(reg_932),
    .q0(weightIH_4_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_5_address0),
    .ce0(weightIH_5_ce0),
    .we0(weightIH_5_we0),
    .d0(reg_938),
    .q0(weightIH_5_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_6_address0),
    .ce0(weightIH_6_ce0),
    .we0(weightIH_6_we0),
    .d0(reg_944),
    .q0(weightIH_6_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_7_address0),
    .ce0(weightIH_7_ce0),
    .we0(weightIH_7_we0),
    .d0(reg_950),
    .q0(weightIH_7_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_8_address0),
    .ce0(weightIH_8_ce0),
    .we0(weightIH_8_we0),
    .d0(reg_956),
    .q0(weightIH_8_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_9_address0),
    .ce0(weightIH_9_ce0),
    .we0(weightIH_9_we0),
    .d0(reg_962),
    .q0(weightIH_9_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_10_address0),
    .ce0(weightIH_10_ce0),
    .we0(weightIH_10_we0),
    .d0(reg_968),
    .q0(weightIH_10_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_11_address0),
    .ce0(weightIH_11_ce0),
    .we0(weightIH_11_we0),
    .d0(reg_974),
    .q0(weightIH_11_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_12_address0),
    .ce0(weightIH_12_ce0),
    .we0(weightIH_12_we0),
    .d0(input_r_0_data_out),
    .q0(weightIH_12_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
weightIH_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightIH_13_address0),
    .ce0(weightIH_13_ce0),
    .we0(weightIH_13_we0),
    .d0(input_r_0_data_out),
    .q0(weightIH_13_q0)
);

mlp_weightHO #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
weightHO_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weightHO_address0),
    .ce0(weightHO_ce0),
    .we0(weightHO_we0),
    .d0(weightHO_d0),
    .q0(weightHO_q0)
);

mlp_weightIH_0 #(
    .DataWidth( 32 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
SumH_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(SumH_address0),
    .ce0(SumH_ce0),
    .we0(SumH_we0),
    .d0(SumH_d0),
    .q0(SumH_q0)
);

mlp_result #(
    .DataWidth( 32 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
result_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(result_address0),
    .ce0(result_ce0),
    .we0(result_we0),
    .d0(result_d0),
    .q0(result_q0)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_1_q0),
    .din1(test_data_1_load_reg_2161),
    .ce(1'b1),
    .dout(grp_fu_1119_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_2_q0),
    .din1(test_data_2_load_reg_2166),
    .ce(1'b1),
    .dout(grp_fu_1124_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_3_q0),
    .din1(test_data_3_load_reg_2171),
    .ce(1'b1),
    .dout(grp_fu_1129_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_4_q0),
    .din1(test_data_4_load_reg_2176),
    .ce(1'b1),
    .dout(grp_fu_1134_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_5_q0),
    .din1(test_data_5_load_reg_2181),
    .ce(1'b1),
    .dout(grp_fu_1139_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_6_q0),
    .din1(test_data_6_load_reg_2186),
    .ce(1'b1),
    .dout(grp_fu_1144_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_7_q0),
    .din1(test_data_7_load_reg_2191),
    .ce(1'b1),
    .dout(grp_fu_1149_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_8_q0),
    .din1(test_data_8_load_reg_2196),
    .ce(1'b1),
    .dout(grp_fu_1154_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_9_q0),
    .din1(test_data_9_load_reg_2201),
    .ce(1'b1),
    .dout(grp_fu_1159_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_10_q0),
    .din1(test_data_10_load_reg_2206),
    .ce(1'b1),
    .dout(grp_fu_1164_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_11_q0),
    .din1(test_data_11_load_reg_2211),
    .ce(1'b1),
    .dout(grp_fu_1169_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_12_q0),
    .din1(test_data_12_load_reg_2216),
    .ce(1'b1),
    .dout(grp_fu_1174_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightIH_13_q0),
    .din1(test_data_13_load_reg_2221),
    .ce(1'b1),
    .dout(grp_fu_1179_p2)
);

mlp_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mlp_mul_32s_32s_3bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(weightHO_q0),
    .din1(SumH_q0),
    .ce(1'b1),
    .dout(grp_fu_1622_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond9_fu_985_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state1) | ((1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond9_reg_2009)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond8_fu_1002_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & (1'b0 == exitcond8_fu_1002_p2))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond8_fu_1002_p2)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond7_fu_1026_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state19) | ((1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond7_reg_2043)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond5_fu_1050_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & (1'b0 == exitcond5_fu_1050_p2))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond5_fu_1050_p2)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_1090_p2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1090_p2))) begin
            ap_enable_reg_pp4_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state41) | ((1'b1 == ap_CS_fsm_pp4_stage0) & ~(1'b0 == exitcond3_fu_1090_p2)))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter3 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter3 <= ap_enable_reg_pp4_iter2;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter4 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter4 <= ap_enable_reg_pp4_iter3;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter5 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter5 <= ap_enable_reg_pp4_iter4;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter6 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter6 <= ap_enable_reg_pp4_iter5;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter7 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter7 <= ap_enable_reg_pp4_iter6;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter8 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter8 <= ap_enable_reg_pp4_iter7;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter9 <= 1'b0;
    end else begin
        ap_enable_reg_pp4_iter9 <= ap_enable_reg_pp4_iter8;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & ~(1'b0 == exitcond1_fu_1604_p2))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b0 == exitcond1_reg_2484))) begin
            ap_enable_reg_pp5_iter1 <= 1'b1;
        end else if (((1'b1 == ap_CS_fsm_state52) | ((1'b1 == ap_CS_fsm_pp5_stage1) & ~(1'b0 == exitcond1_reg_2484)))) begin
            ap_enable_reg_pp5_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp5_stage1)) begin
            ap_enable_reg_pp5_iter3 <= ap_enable_reg_pp5_iter2;
        end else if ((1'b1 == ap_CS_fsm_state52)) begin
            ap_enable_reg_pp5_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & ~(1'b0 == exitcond_fu_1992_p2))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state40) & ~(1'b0 == exitcond4_fu_1067_p2))) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & (1'b0 == exitcond_fu_1992_p2))) begin
            ap_enable_reg_pp6_iter1 <= 1'b1;
        end else if ((((1'b1 == ap_CS_fsm_state40) & ~(1'b0 == exitcond4_fu_1067_p2)) | ((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & ~(1'b0 == exitcond_fu_1992_p2)))) begin
            ap_enable_reg_pp6_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if (~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)))) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if (((1'b1 == ap_CS_fsm_state40) & ~(1'b0 == exitcond4_fu_1067_p2))) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_r_0_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == input_r_0_ack_out) & (1'b1 == input_r_0_vld_out))) begin
            input_r_0_sel_rd <= ~input_r_0_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_r_0_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == input_r_0_vld_in) & (1'b1 == input_r_0_ack_in))) begin
            input_r_0_sel_wr <= ~input_r_0_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        input_r_0_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == input_r_0_vld_in) & (1'b1 == input_r_0_ack_out) & (input_r_0_state == ap_const_lv2_3)) | ((1'b0 == input_r_0_vld_in) & (input_r_0_state == ap_const_lv2_2)))) begin
            input_r_0_state <= ap_const_lv2_2;
        end else if ((((1'b1 == input_r_0_vld_in) & (1'b0 == input_r_0_ack_out) & (input_r_0_state == ap_const_lv2_3)) | ((1'b0 == input_r_0_ack_out) & (input_r_0_state == ap_const_lv2_1)))) begin
            input_r_0_state <= ap_const_lv2_1;
        end else if ((((1'b1 == input_r_0_vld_in) & (input_r_0_state == ap_const_lv2_2)) | ((1'b1 == input_r_0_ack_out) & (input_r_0_state == ap_const_lv2_1)) | ((input_r_0_state == ap_const_lv2_3) & ~((1'b1 == input_r_0_vld_in) & (1'b0 == input_r_0_ack_out)) & ~((1'b0 == input_r_0_vld_in) & (1'b1 == input_r_0_ack_out))))) begin
            input_r_0_state <= ap_const_lv2_3;
        end else begin
            input_r_0_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_r_1_sel_rd <= 1'b0;
    end else begin
        if (((1'b1 == output_r_1_ack_out) & (1'b1 == output_r_1_vld_out))) begin
            output_r_1_sel_rd <= ~output_r_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_r_1_sel_wr <= 1'b0;
    end else begin
        if (((1'b1 == output_r_1_vld_in) & (1'b1 == output_r_1_ack_in))) begin
            output_r_1_sel_wr <= ~output_r_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        output_r_1_state <= ap_const_lv2_0;
    end else begin
        if ((((1'b0 == output_r_1_vld_in) & (1'b1 == output_r_1_ack_out) & (ap_const_lv2_3 == output_r_1_state)) | ((1'b0 == output_r_1_vld_in) & (ap_const_lv2_2 == output_r_1_state)))) begin
            output_r_1_state <= ap_const_lv2_2;
        end else if ((((1'b1 == output_r_1_vld_in) & (1'b0 == output_r_1_ack_out) & (ap_const_lv2_3 == output_r_1_state)) | ((1'b0 == output_r_1_ack_out) & (ap_const_lv2_1 == output_r_1_state)))) begin
            output_r_1_state <= ap_const_lv2_1;
        end else if ((((1'b1 == output_r_1_vld_in) & (ap_const_lv2_2 == output_r_1_state)) | ((1'b1 == output_r_1_ack_out) & (ap_const_lv2_1 == output_r_1_state)) | ((ap_const_lv2_3 == output_r_1_state) & ~((1'b1 == output_r_1_vld_in) & (1'b0 == output_r_1_ack_out)) & ~((1'b0 == output_r_1_vld_in) & (1'b1 == output_r_1_ack_out))))) begin
            output_r_1_state <= ap_const_lv2_3;
        end else begin
            output_r_1_state <= ap_const_lv2_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)))) begin
        i_2_reg_857 <= i_5_reg_2077;
    end else if (((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0))) begin
        i_2_reg_857 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1090_p2) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        i_3_reg_881 <= i_7_fu_1113_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        i_3_reg_881 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & ~(1'b0 == exitcond4_fu_1067_p2))) begin
        i_4_reg_903 <= ap_const_lv5_1;
    end else if (((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & (1'b0 == exitcond_fu_1992_p2) & (1'b1 == ap_enable_reg_pp6_iter0))) begin
        i_4_reg_903 <= i_6_fu_2003_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        i_reg_821 <= i_1_reg_2029;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        i_reg_821 <= ap_const_lv5_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_1_reg_845 <= ap_const_lv4_1;
    end else if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        j_1_reg_845 <= j_4_reg_2063;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == exitcond1_reg_2484) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        j_3_reg_892 <= j_5_reg_2498;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        j_3_reg_892 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_reg_833 <= ap_const_lv4_1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)))) begin
        j_reg_833 <= j_2_reg_2038;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        k_5_reg_869 <= ap_const_lv5_1;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        k_5_reg_869 <= k_reg_2518;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp4_stage0)) begin
        ap_pipeline_reg_pp4_iter1_exitcond3_reg_2226 <= exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter1_i_3_cast_reg_2230[3 : 0] <= i_3_cast_reg_2230[3 : 0];
        exitcond3_reg_2226 <= exitcond3_fu_1090_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == 1'b1)) begin
        ap_pipeline_reg_pp4_iter2_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter1_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter2_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter1_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter3_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter2_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter3_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter2_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter4_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter3_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter4_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter3_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter5_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter4_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter5_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter4_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter6_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter5_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter6_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter5_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter7_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter6_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter7_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter6_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter8_exitcond3_reg_2226 <= ap_pipeline_reg_pp4_iter7_exitcond3_reg_2226;
        ap_pipeline_reg_pp4_iter8_i_3_cast_reg_2230[3 : 0] <= ap_pipeline_reg_pp4_iter7_i_3_cast_reg_2230[3 : 0];
        ap_pipeline_reg_pp4_iter8_tmp_10_reg_2443 <= tmp_10_reg_2443;
        ap_pipeline_reg_pp4_iter8_tmp_12_reg_2448 <= tmp_12_reg_2448;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp5_stage0)) begin
        ap_pipeline_reg_pp5_iter1_exitcond1_reg_2484 <= exitcond1_reg_2484;
        ap_pipeline_reg_pp5_iter2_exitcond1_reg_2484 <= ap_pipeline_reg_pp5_iter1_exitcond1_reg_2484;
        ap_pipeline_reg_pp5_iter3_exitcond1_reg_2484 <= ap_pipeline_reg_pp5_iter2_exitcond1_reg_2484;
        exitcond1_reg_2484 <= exitcond1_fu_1604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))))) begin
        ap_pipeline_reg_pp6_iter1_exitcond_reg_2584 <= exitcond_reg_2584;
        exitcond_reg_2584 <= exitcond_fu_1992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)))) begin
        exitcond5_reg_2073 <= exitcond5_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        exitcond7_reg_2043 <= exitcond7_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)))) begin
        exitcond8_reg_2034 <= exitcond8_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        exitcond9_reg_2009 <= exitcond9_fu_985_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0)))) begin
        i_1_reg_2029 <= i_1_fu_996_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == exitcond3_fu_1090_p2))) begin
        i_3_cast_reg_2230[3 : 0] <= i_3_cast_fu_1096_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'b0 == exitcond5_fu_1050_p2))) begin
        i_5_reg_2077 <= i_5_fu_1056_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0)))) begin
        i_cast_reg_2013[4 : 0] <= i_cast_fu_991_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == input_r_0_load_A)) begin
        input_r_0_payload_A <= input_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == input_r_0_load_B)) begin
        input_r_0_payload_B <= input_r_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0)))) begin
        j_1_cast_reg_2047[3 : 0] <= j_1_cast_fu_1032_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & (1'b0 == exitcond8_fu_1002_p2))) begin
        j_2_reg_2038 <= j_2_fu_1008_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0)))) begin
        j_4_reg_2063 <= j_4_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == exitcond1_fu_1604_p2) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        j_5_reg_2498 <= j_5_fu_1616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (1'b0 == exitcond4_fu_1067_p2))) begin
        k_5_cast_reg_2091[4 : 0] <= k_5_cast_fu_1073_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        k_reg_2518 <= k_fu_1634_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp4_iter7_exitcond3_reg_2226)) begin
        newSel3_reg_2469 <= newSel3_fu_1507_p3;
        or_cond3_reg_2474 <= or_cond3_fu_1515_p2;
        tmp_1_i_reg_2458 <= tmp_1_i_fu_1290_p2;
        tmp_4_i_reg_2464 <= tmp_4_i_fu_1295_p2;
        tmp_i_reg_2453 <= tmp_i_fu_1285_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == output_r_1_load_A)) begin
        output_r_1_payload_A <= result_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == output_r_1_load_B)) begin
        output_r_1_payload_B <= result_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        p_neg_t_i1_reg_2558 <= p_neg_t_i1_fu_1722_p2;
        tmp_12_i1_reg_2574 <= tmp_12_i1_fu_1744_p2;
        tmp_1_i2_reg_2530 <= tmp_1_i2_fu_1660_p2;
        tmp_24_reg_2536 <= {{result_q0[ap_const_lv32_1F : ap_const_lv32_D]}};
        tmp_26_reg_2547 <= {{result_q0[ap_const_lv32_1F : ap_const_lv32_B]}};
        tmp_35_reg_2569 <= {{p_neg_i1_fu_1698_p2[ap_const_lv32_18 : ap_const_lv32_3]}};
        tmp_37_reg_2579 <= {{p_neg_i1_fu_1698_p2[ap_const_lv32_18 : ap_const_lv32_5]}};
        tmp_4_i5_reg_2541 <= tmp_4_i5_fu_1676_p2;
        tmp_7_i8_reg_2552 <= tmp_7_i8_fu_1692_p2;
        tmp_i1_20_reg_2563 <= tmp_i1_20_fu_1728_p2;
        tmp_i1_reg_2523 <= tmp_i1_fu_1654_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_914 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage2) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage2) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_920 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage3) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_926 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage4) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage4) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_932 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage5) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_938 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage6) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_944 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage7) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_950 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage8) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage8) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_956 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage9) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage9) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_962 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage10) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_968 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage11) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage11) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))))) begin
        reg_974 <= input_r_0_data_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state62) | ((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)))))) begin
        reg_980 <= result_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        result_addr_1_reg_2479 <= k_5_cast_reg_2091;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        test_data_10_load_reg_2206 <= test_data_10_q0;
        test_data_11_load_reg_2211 <= test_data_11_q0;
        test_data_12_load_reg_2216 <= test_data_12_q0;
        test_data_13_load_reg_2221 <= test_data_13_q0;
        test_data_1_load_reg_2161 <= test_data_1_q0;
        test_data_2_load_reg_2166 <= test_data_2_q0;
        test_data_3_load_reg_2171 <= test_data_3_q0;
        test_data_4_load_reg_2176 <= test_data_4_q0;
        test_data_5_load_reg_2181 <= test_data_5_q0;
        test_data_6_load_reg_2186 <= test_data_6_q0;
        test_data_7_load_reg_2191 <= test_data_7_q0;
        test_data_8_load_reg_2196 <= test_data_8_q0;
        test_data_9_load_reg_2201 <= test_data_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp4_iter5_exitcond3_reg_2226)) begin
        tmp10_reg_2421 <= tmp10_fu_1196_p2;
        tmp4_reg_2411 <= tmp4_fu_1184_p2;
        tmp7_reg_2416 <= tmp7_fu_1190_p2;
        tmp_36_1_reg_2381 <= grp_fu_1124_p2;
        tmp_36_2_reg_2386 <= grp_fu_1129_p2;
        tmp_36_3_reg_2391 <= grp_fu_1134_p2;
        tmp_36_6_reg_2396 <= grp_fu_1149_p2;
        tmp_36_9_reg_2401 <= grp_fu_1164_p2;
        tmp_36_s_reg_2406 <= grp_fu_1169_p2;
        tmp_8_reg_2376 <= grp_fu_1119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_pipeline_reg_pp4_iter6_exitcond3_reg_2226)) begin
        tmp_10_reg_2443 <= {{tmp_37_s_fu_1246_p2[ap_const_lv32_1F : ap_const_lv32_D]}};
        tmp_12_reg_2448 <= {{tmp_37_s_fu_1246_p2[ap_const_lv32_1F : ap_const_lv32_B]}};
        tmp_37_s_reg_2426 <= tmp_37_s_fu_1246_p2;
        tmp_9_reg_2432 <= {{tmp_37_s_fu_1246_p2[ap_const_lv32_1F : ap_const_lv32_8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == ap_pipeline_reg_pp5_iter2_exitcond1_reg_2484))) begin
        tmp_32_reg_2513 <= grp_fu_1622_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        weightHO_load_reg_2082 <= weightHO_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        SumH_address0 = j_3_cast_fu_1610_p1;
    end else if ((1'b1 == ap_enable_reg_pp4_iter9)) begin
        SumH_address0 = ap_pipeline_reg_pp4_iter8_i_3_cast_reg_2230;
    end else begin
        SumH_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter0)) | (1'b1 == ap_enable_reg_pp4_iter9))) begin
        SumH_ce0 = 1'b1;
    end else begin
        SumH_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp4_iter9) & (1'b0 == ap_pipeline_reg_pp4_iter8_exitcond3_reg_2226))) begin
        SumH_we0 = 1'b1;
    end else begin
        SumH_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073))) begin
        i_2_phi_fu_861_p4 = i_5_reg_2077;
    end else begin
        i_2_phi_fu_861_p4 = i_2_reg_857;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        i_phi_fu_825_p4 = i_1_reg_2029;
    end else begin
        i_phi_fu_825_p4 = i_reg_821;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage2) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage2) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage3) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage3) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage4) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage4) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage5) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage5) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage6) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage6) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage7) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage7) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage8) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage8) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage9) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage9) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage10) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage10) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage11) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage11) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0)) | ((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0))) | ((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0))))) begin
        input_r_0_ack_out = 1'b1;
    end else begin
        input_r_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == input_r_0_sel)) begin
        input_r_0_data_out = input_r_0_payload_B;
    end else begin
        input_r_0_data_out = input_r_0_payload_A;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034)) | ((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage5)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage6)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage7)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage8)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage9)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage10)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage11)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12)) | ((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073)))) begin
        input_r_TDATA_blk_n = input_r_0_state[1'b0];
    end else begin
        input_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        j_1_phi_fu_849_p4 = j_4_reg_2063;
    end else begin
        j_1_phi_fu_849_p4 = j_1_reg_845;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b0 == exitcond1_reg_2484) & (1'b1 == ap_enable_reg_pp5_iter1))) begin
        j_3_phi_fu_896_p4 = j_5_reg_2498;
    end else begin
        j_3_phi_fu_896_p4 = j_3_reg_892;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034))) begin
        j_phi_fu_837_p4 = j_2_reg_2038;
    end else begin
        j_phi_fu_837_p4 = j_reg_833;
    end
end

always @ (*) begin
    if ((1'b1 == output_r_1_sel)) begin
        output_r_1_data_out = output_r_1_payload_B;
    end else begin
        output_r_1_data_out = output_r_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))))) begin
        output_r_1_vld_in = 1'b1;
    end else begin
        output_r_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584)))) begin
        output_r_TDATA_blk_n = output_r_1_state[1'b1];
    end else begin
        output_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_enable_reg_pp6_iter0))) begin
        result_address0 = i_4_cast_fu_1998_p1;
    end else if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state63) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter3)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3)))) begin
        result_address0 = result_addr_1_reg_2479;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        result_address0 = k_5_cast_reg_2091;
    end else begin
        result_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state61) | ((1'b1 == ap_CS_fsm_pp6_stage0) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & (1'b1 == ap_enable_reg_pp6_iter0)) | (1'b1 == ap_CS_fsm_state63) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter3)) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3)))) begin
        result_ce0 = 1'b1;
    end else begin
        result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        result_d0 = newSel11_fu_1983_p3;
    end else if (((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3))) begin
        result_d0 = tmp_33_fu_1628_p2;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        result_d0 = weightHO_load_reg_2082;
    end else begin
        result_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state63) | ((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3) & (1'b0 == ap_pipeline_reg_pp5_iter3_exitcond1_reg_2484)))) begin
        result_we0 = 1'b1;
    end else begin
        result_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_10_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_10_address0 = i_cast_reg_2013;
    end else begin
        test_data_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_10_ce0 = 1'b1;
    end else begin
        test_data_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_10_we0 = 1'b1;
    end else begin
        test_data_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_11_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_11_address0 = i_cast_reg_2013;
    end else begin
        test_data_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_11_ce0 = 1'b1;
    end else begin
        test_data_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_11_we0 = 1'b1;
    end else begin
        test_data_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_12_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        test_data_12_address0 = i_cast_fu_991_p1;
    end else begin
        test_data_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) | (1'b1 == ap_CS_fsm_state40))) begin
        test_data_12_ce0 = 1'b1;
    end else begin
        test_data_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage12) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_12_we0 = 1'b1;
    end else begin
        test_data_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_13_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_13_address0 = i_cast_reg_2013;
    end else begin
        test_data_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_13_ce0 = 1'b1;
    end else begin
        test_data_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_13_we0 = 1'b1;
    end else begin
        test_data_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_1_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_1_address0 = i_cast_reg_2013;
    end else begin
        test_data_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_1_ce0 = 1'b1;
    end else begin
        test_data_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_1_we0 = 1'b1;
    end else begin
        test_data_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_2_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_2_address0 = i_cast_reg_2013;
    end else begin
        test_data_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_2_ce0 = 1'b1;
    end else begin
        test_data_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_2_we0 = 1'b1;
    end else begin
        test_data_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_3_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_3_address0 = i_cast_reg_2013;
    end else begin
        test_data_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_3_ce0 = 1'b1;
    end else begin
        test_data_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_3_we0 = 1'b1;
    end else begin
        test_data_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_4_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_4_address0 = i_cast_reg_2013;
    end else begin
        test_data_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_4_ce0 = 1'b1;
    end else begin
        test_data_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_4_we0 = 1'b1;
    end else begin
        test_data_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_5_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_5_address0 = i_cast_reg_2013;
    end else begin
        test_data_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_5_ce0 = 1'b1;
    end else begin
        test_data_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_5_we0 = 1'b1;
    end else begin
        test_data_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_6_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_6_address0 = i_cast_reg_2013;
    end else begin
        test_data_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_6_ce0 = 1'b1;
    end else begin
        test_data_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_6_we0 = 1'b1;
    end else begin
        test_data_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_7_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_7_address0 = i_cast_reg_2013;
    end else begin
        test_data_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_7_ce0 = 1'b1;
    end else begin
        test_data_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_7_we0 = 1'b1;
    end else begin
        test_data_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_8_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_8_address0 = i_cast_reg_2013;
    end else begin
        test_data_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_8_ce0 = 1'b1;
    end else begin
        test_data_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_8_we0 = 1'b1;
    end else begin
        test_data_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        test_data_9_address0 = k_5_cast_fu_1073_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1))) begin
        test_data_9_address0 = i_cast_reg_2013;
    end else begin
        test_data_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        test_data_9_ce0 = 1'b1;
    end else begin
        test_data_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter1) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        test_data_9_we0 = 1'b1;
    end else begin
        test_data_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter0))) begin
        weightHO_address0 = j_3_cast_fu_1610_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        weightHO_address0 = weightHO_addr_reg_2068;
    end else if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        weightHO_address0 = i_2_cast_fu_1062_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weightHO_address0 = ap_const_lv32_0;
    end else begin
        weightHO_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_enable_reg_pp5_iter0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0))) | (1'b1 == ap_CS_fsm_state38))) begin
        weightHO_ce0 = 1'b1;
    end else begin
        weightHO_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        weightHO_d0 = input_r_0_data_out;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        weightHO_d0 = tmp_2_fu_1043_p2;
    end else begin
        weightHO_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state35) & ~(input_r_0_vld_out == 1'b0)) | ((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & ~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0))))) begin
        weightHO_we0 = 1'b1;
    end else begin
        weightHO_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp4_iter6)) begin
        weightIH_0_address0 = ap_pipeline_reg_pp4_iter5_i_3_cast_reg_2230;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        weightIH_0_address0 = j_cast_fu_1014_p1;
    end else begin
        weightIH_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0))) | (1'b1 == ap_enable_reg_pp4_iter6))) begin
        weightIH_0_ce0 = 1'b1;
    end else begin
        weightIH_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & ~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_0_we0 = 1'b1;
    end else begin
        weightIH_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_10_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_10_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_10_ce0 = 1'b1;
    end else begin
        weightIH_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_10_we0 = 1'b1;
    end else begin
        weightIH_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_11_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_11_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_11_ce0 = 1'b1;
    end else begin
        weightIH_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_11_we0 = 1'b1;
    end else begin
        weightIH_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_12_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage12))) begin
        weightIH_12_address0 = j_1_cast_fu_1032_p1;
    end else begin
        weightIH_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)))) begin
        weightIH_12_ce0 = 1'b1;
    end else begin
        weightIH_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage12) & ~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_12_we0 = 1'b1;
    end else begin
        weightIH_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_13_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_13_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_13_ce0 = 1'b1;
    end else begin
        weightIH_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_13_we0 = 1'b1;
    end else begin
        weightIH_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_1_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_1_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_1_ce0 = 1'b1;
    end else begin
        weightIH_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_1_we0 = 1'b1;
    end else begin
        weightIH_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_2_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_2_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_2_ce0 = 1'b1;
    end else begin
        weightIH_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_2_we0 = 1'b1;
    end else begin
        weightIH_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_3_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_3_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_3_ce0 = 1'b1;
    end else begin
        weightIH_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_3_we0 = 1'b1;
    end else begin
        weightIH_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_4_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_4_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_4_ce0 = 1'b1;
    end else begin
        weightIH_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_4_we0 = 1'b1;
    end else begin
        weightIH_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_5_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_5_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_5_ce0 = 1'b1;
    end else begin
        weightIH_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_5_we0 = 1'b1;
    end else begin
        weightIH_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_6_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_6_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_6_ce0 = 1'b1;
    end else begin
        weightIH_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_6_we0 = 1'b1;
    end else begin
        weightIH_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_7_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_7_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_7_ce0 = 1'b1;
    end else begin
        weightIH_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_7_we0 = 1'b1;
    end else begin
        weightIH_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_8_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_8_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_8_ce0 = 1'b1;
    end else begin
        weightIH_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_8_we0 = 1'b1;
    end else begin
        weightIH_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0))) begin
        weightIH_9_address0 = i_3_cast_fu_1096_p1;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        weightIH_9_address0 = j_1_cast_reg_2047;
    end else begin
        weightIH_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_enable_reg_pp4_iter0)) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0))))) begin
        weightIH_9_ce0 = 1'b1;
    end else begin
        weightIH_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)))) begin
        weightIH_9_we0 = 1'b1;
    end else begin
        weightIH_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond9_fu_985_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~((1'b0 == exitcond9_reg_2009) & (1'b1 == ap_enable_reg_pp0_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond9_fu_985_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter0) & (1'b0 == exitcond9_reg_2009) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond8_fu_1002_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp1_iter1) & (1'b0 == exitcond8_reg_2034) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp1_iter0) & ~(1'b0 == exitcond8_fu_1002_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)) & ~((1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond7_fu_1026_p2)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b1 == ap_enable_reg_pp2_iter0) & ~((1'b0 == exitcond7_reg_2043) & (1'b1 == ap_enable_reg_pp2_iter1) & (input_r_0_vld_out == 1'b0)) & ~(1'b0 == exitcond7_fu_1026_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_pp2_stage3 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage3;
            end
        end
        ap_ST_fsm_pp2_stage4 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage4;
            end
        end
        ap_ST_fsm_pp2_stage5 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage5;
            end
        end
        ap_ST_fsm_pp2_stage6 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage6;
            end
        end
        ap_ST_fsm_pp2_stage7 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage7;
            end
        end
        ap_ST_fsm_pp2_stage8 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage8;
            end
        end
        ap_ST_fsm_pp2_stage9 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage9;
            end
        end
        ap_ST_fsm_pp2_stage10 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage10;
            end
        end
        ap_ST_fsm_pp2_stage11 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage11;
            end
        end
        ap_ST_fsm_pp2_stage12 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & (1'b0 == exitcond7_reg_2043) & (input_r_0_vld_out == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage12;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (~(input_r_0_vld_out == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if (~(~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond5_fu_1050_p2))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((~((1'b1 == ap_enable_reg_pp3_iter1) & (1'b0 == exitcond5_reg_2073) & (input_r_0_vld_out == 1'b0)) & (1'b1 == ap_enable_reg_pp3_iter0) & ~(1'b0 == exitcond5_fu_1050_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (~(1'b0 == exitcond4_fu_1067_p2)) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp4_iter9) & ~(1'b1 == ap_enable_reg_pp4_iter8)) & ~((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_1090_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if (((1'b1 == ap_enable_reg_pp4_iter0) & ~(1'b0 == exitcond3_fu_1090_p2) & ~(1'b1 == ap_enable_reg_pp4_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp5_iter0) & ~(1'b0 == exitcond1_fu_1604_p2) & ~(1'b1 == ap_enable_reg_pp5_iter1))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_pp5_stage1 : begin
            if (~((1'b1 == ap_CS_fsm_pp5_stage1) & (1'b1 == ap_enable_reg_pp5_iter3) & ~(1'b1 == ap_enable_reg_pp5_iter2))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp6_iter2) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp6_iter1)) & ~(~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & (1'b1 == ap_enable_reg_pp6_iter0) & ~(1'b0 == exitcond_fu_1992_p2) & ~(1'b1 == ap_enable_reg_pp6_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp6_iter2) & ~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & ~(1'b1 == ap_enable_reg_pp6_iter1)) | (~(((1'b1 == ap_enable_reg_pp6_iter1) & (1'b0 == exitcond_reg_2584) & (1'b0 == output_r_1_ack_in)) | ((1'b1 == ap_enable_reg_pp6_iter2) & (1'b0 == ap_pipeline_reg_pp6_iter1_exitcond_reg_2584) & (1'b0 == output_r_1_ack_in))) & (1'b1 == ap_enable_reg_pp6_iter0) & ~(1'b0 == exitcond_fu_1992_p2) & ~(1'b1 == ap_enable_reg_pp6_iter1)))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state67 : begin
            if (~(output_r_1_ack_in == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SumH_d0 = ((or_cond3_reg_2474[0:0] === 1'b1) ? newSel3_reg_2469 : newSel57_cast_fu_1593_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[ap_const_lv32_B];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[ap_const_lv32_C];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[ap_const_lv32_D];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[ap_const_lv32_8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[ap_const_lv32_F];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[ap_const_lv32_11];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[ap_const_lv32_12];

assign ap_CS_fsm_pp2_stage10 = ap_CS_fsm[ap_const_lv32_1B];

assign ap_CS_fsm_pp2_stage11 = ap_CS_fsm[ap_const_lv32_1C];

assign ap_CS_fsm_pp2_stage12 = ap_CS_fsm[ap_const_lv32_1D];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[ap_const_lv32_13];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[ap_const_lv32_14];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[ap_const_lv32_15];

assign ap_CS_fsm_pp2_stage5 = ap_CS_fsm[ap_const_lv32_16];

assign ap_CS_fsm_pp2_stage6 = ap_CS_fsm[ap_const_lv32_17];

assign ap_CS_fsm_pp2_stage7 = ap_CS_fsm[ap_const_lv32_18];

assign ap_CS_fsm_pp2_stage8 = ap_CS_fsm[ap_const_lv32_19];

assign ap_CS_fsm_pp2_stage9 = ap_CS_fsm[ap_const_lv32_1A];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[ap_const_lv32_20];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[ap_const_lv32_25];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[ap_const_lv32_27];

assign ap_CS_fsm_pp5_stage1 = ap_CS_fsm[ap_const_lv32_28];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[ap_const_lv32_2C];

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state16 = ap_CS_fsm[ap_const_lv32_E];

assign ap_CS_fsm_state19 = ap_CS_fsm[ap_const_lv32_10];

assign ap_CS_fsm_state35 = ap_CS_fsm[ap_const_lv32_1F];

assign ap_CS_fsm_state38 = ap_CS_fsm[ap_const_lv32_21];

assign ap_CS_fsm_state39 = ap_CS_fsm[ap_const_lv32_22];

assign ap_CS_fsm_state40 = ap_CS_fsm[ap_const_lv32_23];

assign ap_CS_fsm_state41 = ap_CS_fsm[ap_const_lv32_24];

assign ap_CS_fsm_state52 = ap_CS_fsm[ap_const_lv32_26];

assign ap_CS_fsm_state61 = ap_CS_fsm[ap_const_lv32_29];

assign ap_CS_fsm_state62 = ap_CS_fsm[ap_const_lv32_2A];

assign ap_CS_fsm_state63 = ap_CS_fsm[ap_const_lv32_2B];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond1_fu_1604_p2 = ((j_3_phi_fu_896_p4 == ap_const_lv4_B) ? 1'b1 : 1'b0);

assign exitcond3_fu_1090_p2 = ((i_3_reg_881 == ap_const_lv4_B) ? 1'b1 : 1'b0);

assign exitcond4_fu_1067_p2 = ((k_5_reg_869 == ap_const_lv5_1D) ? 1'b1 : 1'b0);

assign exitcond5_fu_1050_p2 = ((i_2_phi_fu_861_p4 == ap_const_lv4_B) ? 1'b1 : 1'b0);

assign exitcond7_fu_1026_p2 = ((j_1_phi_fu_849_p4 == ap_const_lv4_B) ? 1'b1 : 1'b0);

assign exitcond8_fu_1002_p2 = ((j_phi_fu_837_p4 == ap_const_lv4_B) ? 1'b1 : 1'b0);

assign exitcond9_fu_985_p2 = ((i_phi_fu_825_p4 == ap_const_lv5_1D) ? 1'b1 : 1'b0);

assign exitcond_fu_1992_p2 = ((i_4_reg_903 == ap_const_lv5_1D) ? 1'b1 : 1'b0);

assign i_1_fu_996_p2 = (i_reg_821 + ap_const_lv5_1);

assign i_2_cast_fu_1062_p1 = i_2_reg_857;

assign i_3_cast_fu_1096_p1 = i_3_reg_881;

assign i_4_cast_fu_1998_p1 = i_4_reg_903;

assign i_5_fu_1056_p2 = (i_2_phi_fu_861_p4 + ap_const_lv4_1);

assign i_6_fu_2003_p2 = (i_4_reg_903 + ap_const_lv5_1);

assign i_7_fu_1113_p2 = (i_3_reg_881 + ap_const_lv4_1);

assign i_cast_fu_991_p1 = i_reg_821;

assign input_r_0_ack_in = input_r_0_state[1'b1];

assign input_r_0_load_A = (input_r_0_state_cmp_full & ~input_r_0_sel_wr);

assign input_r_0_load_B = (input_r_0_sel_wr & input_r_0_state_cmp_full);

assign input_r_0_sel = input_r_0_sel_rd;

assign input_r_0_state_cmp_full = ((input_r_0_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign input_r_0_vld_in = input_r_TVALID;

assign input_r_0_vld_out = input_r_0_state[1'b0];

assign input_r_TREADY = input_r_0_state[1'b1];

assign j_1_cast_fu_1032_p1 = j_1_reg_845;

assign j_2_fu_1008_p2 = (ap_const_lv4_1 + j_phi_fu_837_p4);

assign j_3_cast_fu_1610_p1 = j_3_phi_fu_896_p4;

assign j_4_fu_1037_p2 = (j_1_reg_845 + ap_const_lv4_1);

assign j_5_fu_1616_p2 = (j_3_phi_fu_896_p4 + ap_const_lv4_1);

assign j_cast_fu_1014_p1 = j_reg_833;

assign k_5_cast_fu_1073_p1 = k_5_reg_869;

assign k_fu_1634_p2 = (k_5_reg_869 + ap_const_lv5_1);

assign newSel10_fu_1971_p3 = ((or_cond6_fu_1951_p2[0:0] === 1'b1) ? newSel8_fu_1943_p3 : ap_const_lv30_0);

assign newSel11_fu_1983_p3 = ((or_cond7_fu_1965_p2[0:0] === 1'b1) ? newSel9_fu_1957_p3 : newSel69_cast_fu_1979_p1);

assign newSel1_fu_1493_p3 = ((sel_tmp22_i_fu_1457_p2[0:0] === 1'b1) ? tmp_11_i_cast_fu_1406_p1 : tmp_9_i_fu_1371_p2);

assign newSel2_fu_1571_p3 = ((sel_tmp6_i_fu_1566_p2[0:0] === 1'b1) ? tmp_6_i_fu_1545_p2 : tmp_3_i_cast_fu_1534_p1);

assign newSel3_fu_1507_p3 = ((or_cond_fu_1487_p2[0:0] === 1'b1) ? newSel_cast_fu_1483_p1 : newSel1_fu_1493_p3);

assign newSel4_fu_1585_p3 = ((or_cond2_fu_1579_p2[0:0] === 1'b1) ? newSel2_fu_1571_p3 : ap_const_lv30_0);

assign newSel57_cast_fu_1593_p1 = newSel4_fu_1585_p3;

assign newSel61_cast_fu_1920_p1 = $signed(newSel6_fu_1913_p3);

assign newSel69_cast_fu_1979_p1 = newSel10_fu_1971_p3;

assign newSel6_fu_1913_p3 = ((tmp_i1_reg_2523[0:0] === 1'b1) ? ap_const_lv28_100 : tmp_14_i1_fu_1857_p2);

assign newSel7_fu_1929_p3 = ((sel_tmp22_i1_fu_1898_p2[0:0] === 1'b1) ? tmp_11_i19_cast_fu_1846_p1 : tmp_9_i1_fu_1827_p2);

assign newSel8_fu_1943_p3 = ((sel_tmp6_i1_fu_1878_p2[0:0] === 1'b1) ? tmp_6_i7_fu_1784_p2 : tmp_3_i4_cast_fu_1773_p1);

assign newSel9_fu_1957_p3 = ((or_cond4_fu_1924_p2[0:0] === 1'b1) ? newSel61_cast_fu_1920_p1 : newSel7_fu_1929_p3);

assign newSel_cast_fu_1483_p1 = $signed(newSel_fu_1475_p3);

assign newSel_fu_1475_p3 = ((tmp_i_fu_1285_p2[0:0] === 1'b1) ? ap_const_lv28_100 : tmp_14_i_fu_1433_p2);

assign or_cond1_fu_1501_p2 = (sel_tmp22_i_fu_1457_p2 | sel_tmp13_i_fu_1445_p2);

assign or_cond2_fu_1579_p2 = (sel_tmp6_i_fu_1566_p2 | sel_tmp1_i_fu_1556_p2);

assign or_cond3_fu_1515_p2 = (or_cond_fu_1487_p2 | or_cond1_fu_1501_p2);

assign or_cond4_fu_1924_p2 = (tmp_i1_reg_2523 | sel_tmp33_i1_fu_1908_p2);

assign or_cond5_fu_1937_p2 = (sel_tmp22_i1_fu_1898_p2 | sel_tmp13_i1_fu_1888_p2);

assign or_cond6_fu_1951_p2 = (sel_tmp6_i1_fu_1878_p2 | sel_tmp1_i1_fu_1868_p2);

assign or_cond7_fu_1965_p2 = (or_cond4_fu_1924_p2 | or_cond5_fu_1937_p2);

assign or_cond_fu_1487_p2 = (tmp_i_fu_1285_p2 | sel_tmp33_i_fu_1469_p2);

assign output_r_1_ack_in = output_r_1_state[1'b1];

assign output_r_1_ack_out = output_r_TREADY;

assign output_r_1_load_A = (output_r_1_state_cmp_full & ~output_r_1_sel_wr);

assign output_r_1_load_B = (output_r_1_sel_wr & output_r_1_state_cmp_full);

assign output_r_1_sel = output_r_1_sel_rd;

assign output_r_1_state_cmp_full = ((output_r_1_state != ap_const_lv2_1) ? 1'b1 : 1'b0);

assign output_r_1_vld_out = output_r_1_state[1'b0];

assign output_r_TDATA = output_r_1_data_out;

assign output_r_TVALID = output_r_1_state[1'b0];

assign p_lshr_f_i14_cast_fu_1812_p1 = $unsigned(tmp_34_fu_1808_p1);

assign p_lshr_f_i_cast_fu_1355_p1 = $unsigned(tmp_18_fu_1351_p1);

assign p_lshr_i12_cast_fu_1718_p1 = $unsigned(tmp_30_fu_1714_p1);

assign p_lshr_i_cast_fu_1332_p1 = $unsigned(tmp_16_fu_1328_p1);

assign p_neg_i1_fu_1698_p2 = ($signed(ap_const_lv25_0) - $signed(tmp_30_cast_fu_1650_p1));

assign p_neg_i_fu_1312_p2 = ($signed(ap_const_lv25_0) - $signed(tmp_34_cast_fu_1282_p1));

assign p_neg_t_i1_fu_1722_p2 = (ap_const_lv31_0 - p_lshr_i12_cast_fu_1718_p1);

assign p_neg_t_i_fu_1336_p2 = (ap_const_lv31_0 - p_lshr_i_cast_fu_1332_p1);

assign sel_tmp12_i1_fu_1883_p2 = (tmp_4_i5_reg_2541 ^ 1'b1);

assign sel_tmp12_i_fu_1439_p2 = (tmp_4_i_fu_1295_p2 ^ 1'b1);

assign sel_tmp13_i1_fu_1888_p2 = (tmp_7_i8_reg_2552 & sel_tmp12_i1_fu_1883_p2);

assign sel_tmp13_i_fu_1445_p2 = (tmp_7_i_fu_1300_p2 & sel_tmp12_i_fu_1439_p2);

assign sel_tmp1_i1_fu_1868_p2 = (tmp_1_i2_reg_2530 & sel_tmp_i1_fu_1863_p2);

assign sel_tmp1_i_fu_1556_p2 = (tmp_1_i_reg_2458 & sel_tmp_i_fu_1551_p2);

assign sel_tmp21_i1_fu_1893_p2 = (tmp_7_i8_reg_2552 ^ 1'b1);

assign sel_tmp21_i_fu_1451_p2 = (tmp_7_i_fu_1300_p2 ^ 1'b1);

assign sel_tmp22_i1_fu_1898_p2 = (tmp_i1_20_reg_2563 & sel_tmp21_i1_fu_1893_p2);

assign sel_tmp22_i_fu_1457_p2 = (tmp_i_16_fu_1377_p2 & sel_tmp21_i_fu_1451_p2);

assign sel_tmp32_i1_fu_1903_p2 = (tmp_i1_20_reg_2563 ^ 1'b1);

assign sel_tmp32_i_fu_1463_p2 = (tmp_i_16_fu_1377_p2 ^ 1'b1);

assign sel_tmp33_i1_fu_1908_p2 = (tmp_12_i1_reg_2574 & sel_tmp32_i1_fu_1903_p2);

assign sel_tmp33_i_fu_1469_p2 = (tmp_12_i_fu_1410_p2 & sel_tmp32_i_fu_1463_p2);

assign sel_tmp5_i1_fu_1873_p2 = (tmp_1_i2_reg_2530 ^ 1'b1);

assign sel_tmp5_i_fu_1561_p2 = (tmp_1_i_reg_2458 ^ 1'b1);

assign sel_tmp6_i1_fu_1878_p2 = (tmp_4_i5_reg_2541 & sel_tmp5_i1_fu_1873_p2);

assign sel_tmp6_i_fu_1566_p2 = (tmp_4_i_reg_2464 & sel_tmp5_i_fu_1561_p2);

assign sel_tmp_i1_fu_1863_p2 = (tmp_i1_reg_2523 ^ 1'b1);

assign sel_tmp_i_fu_1551_p2 = (tmp_i_reg_2453 ^ 1'b1);

assign tmp10_fu_1196_p2 = (grp_fu_1174_p2 + grp_fu_1179_p2);

assign tmp11_fu_1235_p2 = (tmp10_reg_2421 + tmp9_fu_1231_p2);

assign tmp12_fu_1240_p2 = (tmp11_fu_1235_p2 + tmp8_fu_1227_p2);

assign tmp1_fu_1202_p2 = (tmp_8_reg_2376 + tmp_36_1_reg_2381);

assign tmp2_fu_1206_p2 = (tmp1_fu_1202_p2 + weightIH_0_q0);

assign tmp3_fu_1212_p2 = (tmp_36_2_reg_2386 + tmp_36_3_reg_2391);

assign tmp4_fu_1184_p2 = (grp_fu_1139_p2 + grp_fu_1144_p2);

assign tmp5_fu_1216_p2 = (tmp4_reg_2411 + tmp3_fu_1212_p2);

assign tmp6_fu_1221_p2 = (tmp5_fu_1216_p2 + tmp2_fu_1206_p2);

assign tmp7_fu_1190_p2 = (grp_fu_1154_p2 + grp_fu_1159_p2);

assign tmp8_fu_1227_p2 = (tmp7_reg_2416 + tmp_36_6_reg_2396);

assign tmp9_fu_1231_p2 = (tmp_36_9_reg_2401 + tmp_36_s_reg_2406);

assign tmp_11_fu_1521_p1 = $signed(ap_pipeline_reg_pp4_iter8_tmp_10_reg_2443);

assign tmp_11_i19_cast_fu_1846_p1 = $signed(tmp_11_i1_fu_1840_p2);

assign tmp_11_i1_fu_1840_p2 = (ap_const_lv30_60 - tmp_13_i18_cast_fu_1836_p1);

assign tmp_11_i_cast_fu_1406_p1 = $signed(tmp_11_i_fu_1400_p2);

assign tmp_11_i_fu_1400_p2 = (ap_const_lv30_60 - tmp_13_i_cast_fu_1396_p1);

assign tmp_12_i1_fu_1744_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b111111111111101100000000)) ? 1'b1 : 1'b0);

assign tmp_12_i_fu_1410_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b111111111111101100000000)) ? 1'b1 : 1'b0);

assign tmp_13_fu_1538_p1 = $signed(ap_pipeline_reg_pp4_iter8_tmp_12_reg_2448);

assign tmp_13_i18_cast_fu_1836_p1 = $unsigned(tmp_36_fu_1833_p1);

assign tmp_13_i_cast_fu_1396_p1 = $unsigned(tmp_20_fu_1392_p1);

assign tmp_14_fu_1305_p3 = tmp_37_s_reg_2426[ap_const_lv32_1F];

assign tmp_14_i1_fu_1857_p2 = (ap_const_lv28_28 - tmp_16_i21_cast_fu_1853_p1);

assign tmp_14_i_fu_1433_p2 = (ap_const_lv28_28 - tmp_16_i_cast_fu_1429_p1);

assign tmp_15_fu_1318_p4 = {{p_neg_i_fu_1312_p2[ap_const_lv32_18 : ap_const_lv32_2]}};

assign tmp_16_fu_1328_p1 = $signed(tmp_15_fu_1318_p4);

assign tmp_16_i21_cast_fu_1853_p1 = $unsigned(tmp_38_fu_1850_p1);

assign tmp_16_i_cast_fu_1429_p1 = $unsigned(tmp_22_fu_1425_p1);

assign tmp_17_fu_1342_p4 = {{tmp_37_s_reg_2426[ap_const_lv32_1F : ap_const_lv32_A]}};

assign tmp_18_fu_1351_p1 = $signed(tmp_17_fu_1342_p4);

assign tmp_19_fu_1382_p4 = {{p_neg_i_fu_1312_p2[ap_const_lv32_18 : ap_const_lv32_3]}};

assign tmp_1_i2_fu_1660_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b1001100000)) ? 1'b1 : 1'b0);

assign tmp_1_i_fu_1290_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b1001100000)) ? 1'b1 : 1'b0);

assign tmp_20_fu_1392_p1 = $signed(tmp_19_fu_1382_p4);

assign tmp_21_fu_1415_p4 = {{p_neg_i_fu_1312_p2[ap_const_lv32_18 : ap_const_lv32_5]}};

assign tmp_22_fu_1425_p1 = $signed(tmp_21_fu_1415_p4);

assign tmp_23_fu_1640_p4 = {{result_q0[ap_const_lv32_1F : ap_const_lv32_8]}};

assign tmp_25_fu_1760_p1 = $signed(tmp_24_reg_2536);

assign tmp_27_fu_1777_p1 = $signed(tmp_26_reg_2547);

assign tmp_28_fu_1790_p3 = reg_980[ap_const_lv32_1F];

assign tmp_29_fu_1704_p4 = {{p_neg_i1_fu_1698_p2[ap_const_lv32_18 : ap_const_lv32_2]}};

assign tmp_2_fu_1043_p2 = input_r_0_data_out << ap_const_lv32_8;

assign tmp_2_i3_cast_fu_1763_p1 = $unsigned(tmp_25_fu_1760_p1);

assign tmp_2_i_cast_fu_1524_p1 = $unsigned(tmp_11_fu_1521_p1);

assign tmp_30_cast_fu_1650_p1 = $signed(tmp_23_fu_1640_p4);

assign tmp_30_fu_1714_p1 = $signed(tmp_29_fu_1704_p4);

assign tmp_31_fu_1798_p4 = {{reg_980[ap_const_lv32_1F : ap_const_lv32_A]}};

assign tmp_33_fu_1628_p2 = (result_q0 + tmp_32_reg_2513);

assign tmp_34_cast_fu_1282_p1 = $signed(tmp_9_reg_2432);

assign tmp_34_fu_1808_p1 = $signed(tmp_31_fu_1798_p4);

assign tmp_36_fu_1833_p1 = $signed(tmp_35_reg_2569);

assign tmp_37_s_fu_1246_p2 = (tmp12_fu_1240_p2 + tmp6_fu_1221_p2);

assign tmp_38_fu_1850_p1 = $signed(tmp_37_reg_2579);

assign tmp_3_i4_cast_fu_1773_p1 = tmp_3_i4_fu_1767_p2;

assign tmp_3_i4_fu_1767_p2 = (tmp_2_i3_cast_fu_1763_p1 + ap_const_lv28_D8);

assign tmp_3_i_cast_fu_1534_p1 = tmp_3_i_fu_1528_p2;

assign tmp_3_i_fu_1528_p2 = (tmp_2_i_cast_fu_1524_p1 + ap_const_lv28_D8);

assign tmp_4_i5_fu_1676_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b100000000)) ? 1'b1 : 1'b0);

assign tmp_4_i_fu_1295_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b100000000)) ? 1'b1 : 1'b0);

assign tmp_5_i6_cast_fu_1780_p1 = $unsigned(tmp_27_fu_1777_p1);

assign tmp_5_i_cast_fu_1541_p1 = $unsigned(tmp_13_fu_1538_p1);

assign tmp_6_i7_fu_1784_p2 = (tmp_5_i6_cast_fu_1780_p1 + ap_const_lv30_A0);

assign tmp_6_i_fu_1545_p2 = (tmp_5_i_cast_fu_1541_p1 + ap_const_lv30_A0);

assign tmp_7_i8_fu_1692_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b111111111111111100000000)) ? 1'b1 : 1'b0);

assign tmp_7_i_fu_1300_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b111111111111111100000000)) ? 1'b1 : 1'b0);

assign tmp_8_i15_cast_fu_1823_p1 = $signed(tmp_8_i1_fu_1816_p3);

assign tmp_8_i1_fu_1816_p3 = ((tmp_28_fu_1790_p3[0:0] === 1'b1) ? p_neg_t_i1_reg_2558 : p_lshr_f_i14_cast_fu_1812_p1);

assign tmp_8_i_cast_fu_1367_p1 = $signed(tmp_8_i_fu_1359_p3);

assign tmp_8_i_fu_1359_p3 = ((tmp_14_fu_1305_p3[0:0] === 1'b1) ? p_neg_t_i_fu_1336_p2 : p_lshr_f_i_cast_fu_1355_p1);

assign tmp_9_i1_fu_1827_p2 = ($signed(tmp_8_i15_cast_fu_1823_p1) + $signed(ap_const_lv32_80));

assign tmp_9_i_fu_1371_p2 = ($signed(tmp_8_i_cast_fu_1367_p1) + $signed(ap_const_lv32_80));

assign tmp_i1_20_fu_1728_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b111111111111110110100000)) ? 1'b1 : 1'b0);

assign tmp_i1_fu_1654_p2 = (($signed(tmp_23_fu_1640_p4) > $signed(24'b10100000000)) ? 1'b1 : 1'b0);

assign tmp_i_16_fu_1377_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b111111111111110110100000)) ? 1'b1 : 1'b0);

assign tmp_i_fu_1285_p2 = (($signed(tmp_9_reg_2432) > $signed(24'b10100000000)) ? 1'b1 : 1'b0);

assign weightHO_addr_reg_2068 = ap_const_lv32_0;

assign weightIH_0_d0 = input_r_0_data_out << ap_const_lv32_8;

always @ (posedge ap_clk) begin
    i_cast_reg_2013[31:5] <= 27'b000000000000000000000000000;
    j_1_cast_reg_2047[31:4] <= 28'b0000000000000000000000000000;
    k_5_cast_reg_2091[31:5] <= 27'b000000000000000000000000000;
    i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter1_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter2_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter3_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter4_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter5_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter6_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter7_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
    ap_pipeline_reg_pp4_iter8_i_3_cast_reg_2230[31:4] <= 28'b0000000000000000000000000000;
end

endmodule //mlp
